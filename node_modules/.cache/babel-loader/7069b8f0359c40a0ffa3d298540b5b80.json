{"remainingRequest":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/Projects/GADS/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Documents/Projects/GADS/frontend/src/services/groupsApi.js","dependencies":[{"path":"/Users/mac/Documents/Projects/GADS/frontend/src/services/groupsApi.js","mtime":1603954444410},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBpbXBvcnQgYXBpIGZyb20gJ0Avc2VydmljZXMvYXBpJwoKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL21hYy9Eb2N1bWVudHMvUHJvamVjdHMvR0FEUy9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRHcm91cHM6IGZ1bmN0aW9uIGdldEdyb3VwcyhpZFRva2VuKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zKHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgICAgICAgICB1cmw6ICJodHRwOi8vbG9jYWxob3N0OjgwODAvdjEvZ3JvdXBzL2ZldGNoQWxsIiwKICAgICAgICAgICAgICAgIC8vIHVybDogYGh0dHBzOi8vYXBpLmFsZ29ib2FyZC5jb20vdjEvZ3JvdXBzL2ZldGNoQWxsYCwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAiQmVhcmVyICIuY29uY2F0KGlkVG9rZW4pCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAganNvbjogdHJ1ZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGFkZEdyb3VwOiBmdW5jdGlvbiBhZGRHcm91cChpZFRva2VuLCBwYXJhbXMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoewogICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgICB1cmw6ICJodHRwOi8vbG9jYWxob3N0OjgwODAvdjEvZ3JvdXBzL2FkZE9uZSIsCiAgICAgICAgICAgICAgICAvLyB1cmw6IGBodHRwczovL2FwaS5hbGdvYm9hcmQuY29tL3YxL2dyb3Vwcy9hZGRPbmVgLAogICAgICAgICAgICAgICAgLy8gZGF0YTogcGFyYW1zLAogICAgICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogIkJlYXJlciAiLmNvbmNhdChpZFRva2VuKQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGpzb246IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgdXBkYXRlR3JvdXA6IGZ1bmN0aW9uIHVwZGF0ZUdyb3VwKGlkVG9rZW4sIHBhcmFtcykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwdXQnLAogICAgICAgICAgICAgICAgdXJsOiAiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3YxL2dyb3Vwcy91cGRhdGVPbmUvIi5jb25jYXQocGFyYW1zLmlkKSwKICAgICAgICAgICAgICAgIC8vIHVybDogYGh0dHBzOi8vYXBpLmFsZ29ib2FyZC5jb20vdjEvZ3JvdXBzL3VwZGF0ZU9uZS8ke3BhcmFtcy5pZH1gLAogICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkocGFyYW1zKSwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAiQmVhcmVyICIuY29uY2F0KGlkVG9rZW4pCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAganNvbjogdHJ1ZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfSwKICBnZXRHcm91cDogZnVuY3Rpb24gZ2V0R3JvdXAoZ3JvdXBfaWQsIGlkVG9rZW4pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoewogICAgICAgICAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICAgICAgICAgIHVybDogImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92MS9wcm9qZWN0cy9mZXRjaE9uZS8iLmNvbmNhdChncm91cF9pZCksCiAgICAgICAgICAgICAgICAvLyB1cmw6IGBodHRwczovL2FwaS5hbGdvYm9hcmQuY29tL3YxL2dyb3Vwcy9mZXRjaE9uZS8ke2dyb3VwX2lkfWAsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogIkJlYXJlciAiLmNvbmNhdChpZFRva2VuKQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGpzb246IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlR3JvdXA6IGZ1bmN0aW9uIGRlbGV0ZUdyb3VwKGdyb3VwX2lkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zKHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgICAgICAgICB1cmw6ICJodHRwOi8vbG9jYWxob3N0OjgwODAvdjEvZ3JvdXBzL2RlbGV0ZU9uZS8iLmNvbmNhdChncm91cF9pZCkgLy8gdXJsOiBgaHR0cHM6Ly9hcGkuYWxnb2JvYXJkLmNvbS92MS9ncm91cHMvZGVsZXRlT25lLyR7Z3JvdXBfaWR9YCwKICAgICAgICAgICAgICAgIC8vIGRhdGE6IHsgYW5zd2VyOiA0MiB9CgogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTUpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/mac/Documents/Projects/GADS/frontend/src/services/groupsApi.js"],"names":["axios","getGroups","idToken","method","url","headers","json","res","addGroup","params","updateGroup","id","data","JSON","stringify","getGroup","group_id","deleteGroup"],"mappings":"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","sourcesContent":["'use strict'\n\n// import api from '@/services/api'\nimport axios from 'axios'\n\nexport default {\n\tasync getGroups (idToken) {\n\t\t// return api().get(`groups/fetchAll`);\n\t\tconst res = await axios({\n\t\t\tmethod: 'get',\n\t\t\turl: `http://localhost:8080/v1/groups/fetchAll`,\n\t\t\t// url: `https://api.algoboard.com/v1/groups/fetchAll`,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${idToken}`,\n\t\t\t},\n\t\t\tjson: true,\n\t\t});\n\t\treturn res;\n\t},\n\tasync addGroup (idToken, params) {\n\t\t// return api().post(`groups/addOne`, params);\n\t\tconst res = await axios({\n\t\t\tmethod: 'post',\n\t\t\turl: `http://localhost:8080/v1/groups/addOne`,\n\t\t\t// url: `https://api.algoboard.com/v1/groups/addOne`,\n\t\t\t// data: params,\n\t\t\tparams: params,\n\t\t\theaders: { \n\t\t\t\t'content-type': 'application/json', \n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${idToken}`, \n\t\t\t},\n\t\t\tjson: true,\n\t\t});\n\t\treturn res;\n\t},\n\tasync updateGroup (idToken, params) {\n\t\t// return api().put(`groups/updateOne/${params.id}`, params);\n\t\tconst res = await axios({\n\t\t\tmethod: 'put',\n\t\t\turl: `http://localhost:8080/v1/groups/updateOne/${params.id}`,\n\t\t\t// url: `https://api.algoboard.com/v1/groups/updateOne/${params.id}`,\n\t\t\tdata: JSON.stringify(params),\n\t\t\theaders: { \n\t\t\t\t'content-type': 'application/json', \n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${idToken}`, \n\t\t\t},\n\t\t\tjson: true,\n\t\t});\n\t\treturn res;\n\t},\n\tasync getGroup (group_id, idToken) {\n\t\t// return api().get(`groups/fetchOne/${group_id}`);\n\t\tconst res = await axios({\n\t\t\tmethod: 'get',\n\t\t\turl: `http://localhost:8080/v1/projects/fetchOne/${group_id}`,\n\t\t\t// url: `https://api.algoboard.com/v1/groups/fetchOne/${group_id}`,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${idToken}`,\n\t\t\t},\n\t\t\tjson: true,\n\t\t});\n\t\treturn res;\n\t},\n\tasync deleteGroup (group_id) {\n        // return api().delete(`groups/deleteOne/${group_id}`);\n        const res = await axios({\n            method: 'DELETE',\n\t\t\turl: `http://localhost:8080/v1/groups/deleteOne/${group_id}`,\n\t\t\t// url: `https://api.algoboard.com/v1/groups/deleteOne/${group_id}`,\n            // data: { answer: 42 }\n        })\n        return res;\n\t},\n}"]}]}