{"remainingRequest":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/Projects/GADS/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Documents/Projects/GADS/frontend/src/store/modules/groups.js","dependencies":[{"path":"/Users/mac/Documents/Projects/GADS/frontend/src/store/modules/groups.js","mtime":1603972080220},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/mac/Documents/Projects/GADS/frontend/src/store/modules/groups.js"],"names":["groupsApi","state","groups","name","rating","members","description","id","group","getters","groupById","find","actions","addGroup","payload","commit","rootState","idToken","active","then","res","err","getGroup","data","getGroups","length","updateGroup","deleteGroup","mutations","ADD_GROUP","unshift","GET_GROUP","GET_GROUPS","UPDATE_GROUP","index","findIndex","splice","DELETE_GROUP","filter"],"mappings":"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","sourcesContent":["'use strict'\n\nimport groupsApi from '@/services/groupsApi';\n\nconst state = {\n\tgroups: [\n        {\n            name: 'Breast Cancer Prevention',\n            rating: 4,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',\n            id: 1,\n        },\n        {\n            name: 'Fitness',\n            rating: 5,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',\n            id: 2,\n        },\n        {\n            name: 'Mental Health',\n            rating: 5,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',                  \n            id: 3,\n        },\n        {\n            name: 'Diabetes Prevention',\n            rating: 3,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',                  \n            id: 4,\n        },\n        {\n            name: 'Anti-Rape Advocate',\n            rating: 4,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',                  \n            id: 5,\n        },\n    ],\n\tgroup: {},\n};\n\nconst getters = {\n\tgroups: state => state.groups,\n\tgroup: state => state.group,\n\tgroupById: state => id => {\n\t\treturn state.groups.find(group => group.id === id)\n\t}\n};\n\nconst actions = {\n    async addGroup({ commit, rootState }, payload) {\n        // api call\n        return groupsApi.addGroup(rootState.idToken, {\n\t\t\tname: payload.name,\n\t\t\tdescription: payload.description,\n\t\t\tactive: payload.active,\n\t\t})\n\t\t.then(res => {\n\t\t\t// commit group\n\t\t\tcommit('ADD_GROUP', payload);\n\t\t\treturn res;\n\t\t})\n\t\t.catch( err => {\n\t\t\treturn err;\n\t\t})\n    },\n    async getGroup({ state, getters, commit, rootState }, payload) {\n        // filter group then api call\n        if (payload.id == state.group.id) {\n\t\t\treturn state.group\n\t\t}\n\t\n\t\tvar group = getters.groupById(payload.id)\n\t\n\t\tif (group) {\n\t\t\tcommit('GET_GROUP', group)\n\t\t\treturn group;\n\t\t} else {\n\t\t\treturn groupsApi.getGroup(payload.id, rootState.idToken)\n\t\t\t.then(res => {\n\t\t\t\tcommit('GET_GROUP', res.data)\n\t\t\t\treturn res.data;\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\treturn err;\n\t\t\t})\n\t\t}\n    },\n    async getGroups({ state, commit, rootState }) {\n        // api call\n        // commit('GET_GROUPS', groups);\n        if (state.groups && state.groups.length > 0) {\n\t\t\treturn state.groups;\n\t\t}\n\n\t\treturn groupsApi.getGroups(rootState.idToken)\n\t\t.then(res => {\n\t\t\tcommit('GET_GROUPS', res.data);\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch( err => {\n\t\t\t// var message = 'There was a problem fetching events: ' + err.message\n\t\t\treturn err;\n\t\t})\n    },\n    async updateGroup({ commit, rootState }, payload) {\n        // api call\n        return groupsApi.updateGroup(rootState.idToken, {\n\t\t\tid: payload.id,\n\t\t\tname: payload.name,\n\t\t\tdescription: payload.description,\n\t\t\tactive: payload.active,\n\t\t})\n\t\t.then(res => {\n\t\t\t// fix best case\n\t\t\tcommit('UPDATE_GROUP', payload);\n\t\t\treturn res;\n\t\t})\n\t\t.catch( err => {\n\t\t\treturn err;\n\t\t})\n    },\n    async deleteGroup({ commit, rootState }, payload) {\n        // api call\n        return groupsApi.deleteGroup(rootState.idToken, payload.id)\n\t\t.then(res => {\n\t\t\t// fix best case\n\t\t\tcommit('DELETE_GROUPS', payload);\n\t\t\treturn res;\n\t\t})\n\t\t.catch( err => {\n\t\t\treturn err;\n\t\t})\n    },\n};\n\nconst mutations = {\n    ADD_GROUP(state, group) {\n        state.groups.unshift(group);\n    },\n    GET_GROUP(state, group) {\n        state.group = group;\n    },\n    GET_GROUPS(state, groups) {\n        state.groups = groups;\n    },\n    UPDATE_GROUP(state, payload) {\n        const index = state.groups.findIndex(group => group.id === payload.id);\n        if (index !== -1) {\n          state.groups.splice(index, 1, payload);\n        }\n    },\n    DELETE_GROUP(state, payload) {\n        state.groups = state.groups.filter(group => group.id !== payload.id);\n    },\n};\n\nexport default {\n\tstate,\n\tgetters,\n\tactions,\n\tmutations\n};"]}]}