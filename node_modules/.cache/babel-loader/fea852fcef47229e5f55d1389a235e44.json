{"remainingRequest":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/Projects/GADS/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Documents/Projects/GADS/frontend/src/store/modules/groups.js","dependencies":[{"path":"/Users/mac/Documents/Projects/GADS/frontend/src/store/modules/groups.js","mtime":1603955696674},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwoKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL1Byb2plY3RzL0dBRFMvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwp2YXIgc3RhdGUgPSB7CiAgZ3JvdXBzOiBbewogICAgbmFtZTogJ0JyZWFzdCBDYW5jZXIgUHJldmVudGlvbicsCiAgICByYXRpbmc6IDQsCiAgICBtZW1iZXJzOiBbXSwKICAgIGRlc2NyaXB0aW9uOiAnTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gU2l0IHBlcmZlcmVuZGlzIHZvbHVwdGF0aWJ1cyBleGVyY2l0YXRpb25lbSBjdXBpZGl0YXRlIGRvbG9yZW1xdWUgc2FwaWVudGUsIHJlcGVsbGVuZHVzIHZlbmlhbSBxdWlkZW0gZGljdGEgcGVyc3BpY2lhdGlzIG9mZmljaWEgaXRhcXVlIGVhcnVtIGZhY2lsaXMgdml0YWUsIG9kaW8gbWludXMgcHJhZXNlbnRpdW0gdm9sdXB0YXR1bSBxdWk/JywKICAgIGlkOiAxCiAgfSwgewogICAgbmFtZTogJ0ZpdG5lc3MnLAogICAgcmF0aW5nOiA1LAogICAgbWVtYmVyczogW10sCiAgICBkZXNjcmlwdGlvbjogJ0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIFNpdCBwZXJmZXJlbmRpcyB2b2x1cHRhdGlidXMgZXhlcmNpdGF0aW9uZW0gY3VwaWRpdGF0ZSBkb2xvcmVtcXVlIHNhcGllbnRlLCByZXBlbGxlbmR1cyB2ZW5pYW0gcXVpZGVtIGRpY3RhIHBlcnNwaWNpYXRpcyBvZmZpY2lhIGl0YXF1ZSBlYXJ1bSBmYWNpbGlzIHZpdGFlLCBvZGlvIG1pbnVzIHByYWVzZW50aXVtIHZvbHVwdGF0dW0gcXVpPycsCiAgICBpZDogMgogIH0sIHsKICAgIG5hbWU6ICdNZW50YWwgSGVhbHRoJywKICAgIHJhdGluZzogNSwKICAgIG1lbWJlcnM6IFtdLAogICAgZGVzY3JpcHRpb246ICdMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBTaXQgcGVyZmVyZW5kaXMgdm9sdXB0YXRpYnVzIGV4ZXJjaXRhdGlvbmVtIGN1cGlkaXRhdGUgZG9sb3JlbXF1ZSBzYXBpZW50ZSwgcmVwZWxsZW5kdXMgdmVuaWFtIHF1aWRlbSBkaWN0YSBwZXJzcGljaWF0aXMgb2ZmaWNpYSBpdGFxdWUgZWFydW0gZmFjaWxpcyB2aXRhZSwgb2RpbyBtaW51cyBwcmFlc2VudGl1bSB2b2x1cHRhdHVtIHF1aT8nLAogICAgaWQ6IDMKICB9LCB7CiAgICBuYW1lOiAnRGlhYmV0ZXMgUHJldmVudGlvbicsCiAgICByYXRpbmc6IDMsCiAgICBtZW1iZXJzOiBbXSwKICAgIGRlc2NyaXB0aW9uOiAnTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gU2l0IHBlcmZlcmVuZGlzIHZvbHVwdGF0aWJ1cyBleGVyY2l0YXRpb25lbSBjdXBpZGl0YXRlIGRvbG9yZW1xdWUgc2FwaWVudGUsIHJlcGVsbGVuZHVzIHZlbmlhbSBxdWlkZW0gZGljdGEgcGVyc3BpY2lhdGlzIG9mZmljaWEgaXRhcXVlIGVhcnVtIGZhY2lsaXMgdml0YWUsIG9kaW8gbWludXMgcHJhZXNlbnRpdW0gdm9sdXB0YXR1bSBxdWk/JywKICAgIGlkOiA0CiAgfSwgewogICAgbmFtZTogJ0FudGktUmFwZSBBZHZvY2F0ZScsCiAgICByYXRpbmc6IDQsCiAgICBtZW1iZXJzOiBbXSwKICAgIGRlc2NyaXB0aW9uOiAnTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gU2l0IHBlcmZlcmVuZGlzIHZvbHVwdGF0aWJ1cyBleGVyY2l0YXRpb25lbSBjdXBpZGl0YXRlIGRvbG9yZW1xdWUgc2FwaWVudGUsIHJlcGVsbGVuZHVzIHZlbmlhbSBxdWlkZW0gZGljdGEgcGVyc3BpY2lhdGlzIG9mZmljaWEgaXRhcXVlIGVhcnVtIGZhY2lsaXMgdml0YWUsIG9kaW8gbWludXMgcHJhZXNlbnRpdW0gdm9sdXB0YXR1bSBxdWk/JywKICAgIGlkOiA1CiAgfV0sCiAgZ3JvdXA6IG51bGwKfTsKdmFyIGdldHRlcnMgPSB7CiAgZ3JvdXBzOiBmdW5jdGlvbiBncm91cHMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5ncm91cHM7CiAgfSwKICBncm91cDogZnVuY3Rpb24gZ3JvdXAoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5ncm91cDsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGFkZEdyb3VwOiBmdW5jdGlvbiBhZGRHcm91cChfcmVmLCBncm91cCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIC8vIGFwaSBjYWxsCiAgICAgICAgICAgICAgY29tbWl0KCdBRERfR1JPVVAnLCBncm91cCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBnZXRHcm91cDogZnVuY3Rpb24gZ2V0R3JvdXAoX3JlZjIsIGdyb3VwKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgLy8gZmlsdGVyIGdyb3VwIHRoZW4gYXBpIGNhbGwKICAgICAgICAgICAgICBjb21taXQoJ0dFVF9HUk9VUCcsIGdyb3VwKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0R3JvdXBzOiBmdW5jdGlvbiBnZXRHcm91cHMoKQogIC8qeyBjb21taXQgfSovCiAgey8vIGFwaSBjYWxsCiAgICAvLyBjb21taXQoJ0dFVF9HUk9VUFMnLCBncm91cHMpOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfSwKICB1cGRhdGVHcm91cDogZnVuY3Rpb24gdXBkYXRlR3JvdXAoX3JlZjMsIGdyb3VwKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgLy8gYXBpIGNhbGwKICAgICAgICAgICAgICBjb21taXQoJ1VQREFURV9HUk9VUCcsIGdyb3VwKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlR3JvdXA6IGZ1bmN0aW9uIGRlbGV0ZUdyb3VwKF9yZWY0LCBncm91cCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgIHZhciBjb21taXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIC8vIGFwaSBjYWxsCiAgICAgICAgICAgICAgY29tbWl0KCdERUxFVEVfR1JPVVBTJywgZ3JvdXAuaWQpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTUpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIEFERF9HUk9VUDogZnVuY3Rpb24gQUREX0dST1VQKHN0YXRlLCBncm91cCkgewogICAgc3RhdGUuZ3JvdXBzLnVuc2hpZnQoZ3JvdXApOwogIH0sCiAgR0VUX0dST1VQOiBmdW5jdGlvbiBHRVRfR1JPVVAoc3RhdGUsIGdyb3VwKSB7CiAgICBzdGF0ZS5ncm91cCA9IGdyb3VwOwogIH0sCiAgR0VUX0dST1VQUzogZnVuY3Rpb24gR0VUX0dST1VQUyhzdGF0ZSwgZ3JvdXBzKSB7CiAgICBzdGF0ZS5ncm91cHMgPSBncm91cHM7CiAgfSwKICBVUERBVEVfR1JPVVA6IGZ1bmN0aW9uIFVQREFURV9HUk9VUChzdGF0ZSwgZ3JvdXApIHsKICAgIHZhciBpbmRleCA9IHN0YXRlLmdyb3Vwcy5maW5kSW5kZXgoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgIHJldHVybiBncm91cC5pZCA9PT0gZ3JvdXAuaWQ7CiAgICB9KTsKCiAgICBpZiAoaW5kZXggIT09IC0xKSB7CiAgICAgIHN0YXRlLmdyb3Vwcy5zcGxpY2UoaW5kZXgsIDEsIGdyb3VwKTsKICAgIH0KICB9LAogIERFTEVURV9HUk9VUDogZnVuY3Rpb24gREVMRVRFX0dST1VQKHN0YXRlLCBpZCkgewogICAgc3RhdGUuZ3JvdXBzID0gc3RhdGUuZ3JvdXBzLmZpbHRlcihmdW5jdGlvbiAoZ3JvdXApIHsKICAgICAgcmV0dXJuIGdyb3VwLmlkICE9PSBpZDsKICAgIH0pOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/mac/Documents/Projects/GADS/frontend/src/store/modules/groups.js"],"names":["state","groups","name","rating","members","description","id","group","getters","actions","addGroup","commit","getGroup","getGroups","updateGroup","deleteGroup","mutations","ADD_GROUP","unshift","GET_GROUP","GET_GROUPS","UPDATE_GROUP","index","findIndex","splice","DELETE_GROUP","filter"],"mappings":"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","sourcesContent":["'use strict'\n\n// import axios from 'axios';\n\nconst state = {\n\tgroups: [\n        {\n            name: 'Breast Cancer Prevention',\n            rating: 4,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',\n            id: 1,\n        },\n        {\n            name: 'Fitness',\n            rating: 5,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',\n            id: 2,\n        },\n        {\n            name: 'Mental Health',\n            rating: 5,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',                  \n            id: 3,\n        },\n        {\n            name: 'Diabetes Prevention',\n            rating: 3,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',                  \n            id: 4,\n        },\n        {\n            name: 'Anti-Rape Advocate',\n            rating: 4,\n            members: [],\n            description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit perferendis voluptatibus exercitationem cupiditate doloremque sapiente, repellendus veniam quidem dicta perspiciatis officia itaque earum facilis vitae, odio minus praesentium voluptatum qui?',                  \n            id: 5,\n        },\n    ],\n\tgroup: null,\n};\n\nconst getters = {\n\tgroups: state => state.groups,\n\tgroup: state => state.group,\n};\n\nconst actions = {\n    async addGroup({ commit }, group) {\n        // api call\n        commit('ADD_GROUP', group);\n    },\n    async getGroup({ commit }, group) {\n        // filter group then api call\n        commit('GET_GROUP', group);\n    },\n    async getGroups(/*{ commit }*/) {\n        // api call\n        // commit('GET_GROUPS', groups);\n    },\n    async updateGroup({ commit }, group) {\n        // api call\n        commit('UPDATE_GROUP', group);\n    },\n    async deleteGroup({ commit }, group) {\n        // api call\n        commit('DELETE_GROUPS', group.id);\n    },\n};\n\nconst mutations = {\n    ADD_GROUP(state, group) {\n        state.groups.unshift(group);\n    },\n    GET_GROUP(state, group) {\n        state.group = group;\n    },\n    GET_GROUPS(state, groups) {\n        state.groups = groups;\n    },\n    UPDATE_GROUP(state, group) {\n        const index = state.groups.findIndex(group => group.id === group.id);\n        if (index !== -1) {\n          state.groups.splice(index, 1, group);\n        }\n    },\n    DELETE_GROUP(state, id) {\n        state.groups = state.groups.filter(group => group.id !== id);\n    },\n};\n\nexport default {\n\tstate,\n\tgetters,\n\tactions,\n\tmutations\n};"]}]}