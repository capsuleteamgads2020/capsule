{"remainingRequest":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Documents/Projects/GADS2020/frontend/src/services/authApi.js","dependencies":[{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/src/services/authApi.js","mtime":1603972499127},{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBpbXBvcnQgYXBpIGZyb20gJ0Avc2VydmljZXMvYXBpJwoKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL21hYy9Eb2N1bWVudHMvUHJvamVjdHMvR0FEUzIwMjAvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gYXN5bmMgZ2V0VXNlcnMgKGlkVG9rZW4pIHsKICAvLyAJLy8gcmV0dXJuIGFwaSgpLmdldChgdXNlcnMvZmV0Y2hBbGxgKTsKICAvLyAJY29uc3QgcmVzID0gYXdhaXQgYXhpb3MoewogIC8vIAkJbWV0aG9kOiAnZ2V0JywKICAvLyAJCXVybDogYGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92MS91c2Vycy9mZXRjaEFsbGAsCiAgLy8gCQkvLyB1cmw6IGBodHRwczovL2FwaS5hbGdvYm9hcmQuY29tL3YxL3VzZXJzL2ZldGNoQWxsYCwKICAvLyAJCWhlYWRlcnM6IHsKICAvLyAJCQknQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogIC8vIAkJCSdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgLy8gCQkJJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7aWRUb2tlbn1gLAogIC8vIAkJfSwKICAvLyAJCWpzb246IHRydWUsCiAgLy8gCX0pOwogIC8vIAlyZXR1cm4gcmVzOwogIC8vIH0sCiAgYWRkVXNlcjogZnVuY3Rpb24gYWRkVXNlcihwYXJhbXMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoewogICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgICB1cmw6ICJodHRwOi8vbG9jYWxob3N0OjgwODAvdjEvdXNlcnMvYWRkT25lIiwKICAgICAgICAgICAgICAgIC8vIHVybDogYGh0dHBzOi8vYXBpLmFsZ29ib2FyZC5jb20vdjEvdXNlcnMvYWRkT25lYCwKICAgICAgICAgICAgICAgIGRhdGE6IHBhcmFtcywKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyAvLyAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtpZFRva2VufWAsCgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGpzb246IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICB1cGRhdGVVc2VyOiBmdW5jdGlvbiB1cGRhdGVVc2VyKGlkVG9rZW4sIHBhcmFtcykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwdXQnLAogICAgICAgICAgICAgICAgdXJsOiAiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3YxL3VzZXJzL3VwZGF0ZU9uZS8iLmNvbmNhdChwYXJhbXMuaWQpLAogICAgICAgICAgICAgICAgLy8gdXJsOiBgaHR0cHM6Ly9hcGkuYWxnb2JvYXJkLmNvbS92MS91c2Vycy91cGRhdGVPbmUvJHtwYXJhbXMuaWR9YCwKICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHBhcmFtcyksCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogIkJlYXJlciAiLmNvbmNhdChpZFRva2VuKQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGpzb246IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0VXNlcjogZnVuY3Rpb24gZ2V0VXNlcihpZFRva2VuLCB1c2VyX2lkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zKHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgICAgICAgICB1cmw6ICJodHRwOi8vbG9jYWxob3N0OjgwODAvdjEvcHJvamVjdHMvZmV0Y2hPbmUvIi5jb25jYXQodXNlcl9pZCksCiAgICAgICAgICAgICAgICAvLyB1cmw6IGBodHRwczovL2FwaS5hbGdvYm9hcmQuY29tL3YxL3VzZXJzL2ZldGNoT25lLyR7dXNlcl9pZH1gLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICJCZWFyZXIgIi5jb25jYXQoaWRUb2tlbikKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBqc29uOiB0cnVlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGRlbGV0ZVVzZXI6IGZ1bmN0aW9uIGRlbGV0ZVVzZXIodXNlcl9pZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgICAgICAgICAgICAgdXJsOiAiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3YxL3VzZXJzL2RlbGV0ZU9uZS8iLmNvbmNhdCh1c2VyX2lkKSAvLyB1cmw6IGBodHRwczovL2FwaS5hbGdvYm9hcmQuY29tL3YxL3VzZXJzL2RlbGV0ZU9uZS8ke3VzZXJfaWR9YCwKICAgICAgICAgICAgICAgIC8vIGRhdGE6IHsgYW5zd2VyOiA0MiB9CgogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/mac/Documents/Projects/GADS2020/frontend/src/services/authApi.js"],"names":["axios","addUser","params","method","url","data","headers","json","res","updateUser","idToken","id","JSON","stringify","getUser","user_id","deleteUser"],"mappings":"AAAA,a,CAEA;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMC,EAAAA,OAhBQ,mBAgBCC,MAhBD,EAgBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEJF,KAAK,CAAC;AACvBG,gBAAAA,MAAM,EAAE,MADe;AAEvBC,gBAAAA,GAAG,yCAFoB;AAGvB;AACAC,gBAAAA,IAAI,EAAEH,MAJiB;AAKvBI,gBAAAA,OAAO,EAAE;AACR,kCAAgB,kBADR;AAER,4BAAU,kBAFF,CAGR;;AAHQ,iBALc;AAUvBC,gBAAAA,IAAI,EAAE;AAViB,eAAD,CAFD;;AAAA;AAEhBC,cAAAA,GAFgB;AAAA,+CAcfA,GAde;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAetB,GA/Ba;AAgCRC,EAAAA,UAhCQ,sBAgCIC,OAhCJ,EAgCaR,MAhCb,EAgCqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEhBF,KAAK,CAAC;AACvBG,gBAAAA,MAAM,EAAE,KADe;AAEvBC,gBAAAA,GAAG,qDAA8CF,MAAM,CAACS,EAArD,CAFoB;AAGvB;AACAN,gBAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeX,MAAf,CAJiB;AAKvBI,gBAAAA,OAAO,EAAE;AACR,kCAAgB,kBADR;AAER,4BAAU,kBAFF;AAGR,oDAA2BI,OAA3B;AAHQ,iBALc;AAUvBH,gBAAAA,IAAI,EAAE;AAViB,eAAD,CAFW;;AAAA;AAE5BC,cAAAA,GAF4B;AAAA,gDAc3BA,GAd2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAelC,GA/Ca;AAgDRM,EAAAA,OAhDQ,mBAgDCJ,OAhDD,EAgDUK,OAhDV,EAgDmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEdf,KAAK,CAAC;AACvBG,gBAAAA,MAAM,EAAE,KADe;AAEvBC,gBAAAA,GAAG,uDAAgDW,OAAhD,CAFoB;AAGvB;AACAT,gBAAAA,OAAO,EAAE;AACR,kCAAgB,kBADR;AAER,4BAAU,kBAFF;AAGR,oDAA2BI,OAA3B;AAHQ,iBAJc;AASvBH,gBAAAA,IAAI,EAAE;AATiB,eAAD,CAFS;;AAAA;AAE1BC,cAAAA,GAF0B;AAAA,gDAazBA,GAbyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAchC,GA9Da;AA+DRQ,EAAAA,UA/DQ,sBA+DID,OA/DJ,EA+Da;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEFf,KAAK,CAAC;AACpBG,gBAAAA,MAAM,EAAE,QADY;AAE7BC,gBAAAA,GAAG,qDAA8CW,OAA9C,CAF0B,CAG7B;AACS;;AAJoB,eAAD,CAFH;;AAAA;AAEdP,cAAAA,GAFc;AAAA,gDAQbA,GARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS1B;AAxEa,CAAf","sourcesContent":["'use strict'\n\n// import api from '@/services/api'\nimport axios from 'axios'\n\nexport default {\n\t// async getUsers (idToken) {\n\t// \t// return api().get(`users/fetchAll`);\n\t// \tconst res = await axios({\n\t// \t\tmethod: 'get',\n\t// \t\turl: `http://localhost:8080/v1/users/fetchAll`,\n\t// \t\t// url: `https://api.algoboard.com/v1/users/fetchAll`,\n\t// \t\theaders: {\n\t// \t\t\t'Content-Type': 'application/json',\n\t// \t\t\t'Accept': 'application/json',\n\t// \t\t\t'Authorization': `Bearer ${idToken}`,\n\t// \t\t},\n\t// \t\tjson: true,\n\t// \t});\n\t// \treturn res;\n\t// },\n\tasync addUser (params) {\n\t\t// return api().post(`users/addOne`, params);\n\t\tconst res = await axios({\n\t\t\tmethod: 'post',\n\t\t\turl: `http://localhost:8080/v1/users/addOne`,\n\t\t\t// url: `https://api.algoboard.com/v1/users/addOne`,\n\t\t\tdata: params,\n\t\t\theaders: { \n\t\t\t\t'content-type': 'application/json', \n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t// 'Authorization': `Bearer ${idToken}`,\n\t\t\t},\n\t\t\tjson: true,\n\t\t});\n\t\treturn res;\n\t},\n\tasync updateUser (idToken, params) {\n\t\t// return api().put(`users/updateOne/${params.id}`, params);\n\t\tconst res = await axios({\n\t\t\tmethod: 'put',\n\t\t\turl: `http://localhost:8080/v1/users/updateOne/${params.id}`,\n\t\t\t// url: `https://api.algoboard.com/v1/users/updateOne/${params.id}`,\n\t\t\tdata: JSON.stringify(params),\n\t\t\theaders: { \n\t\t\t\t'content-type': 'application/json', \n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${idToken}`, \n\t\t\t},\n\t\t\tjson: true,\n\t\t});\n\t\treturn res;\n\t},\n\tasync getUser (idToken, user_id) {\n\t\t// return api().get(`users/fetchOne/${user_id}`);\n\t\tconst res = await axios({\n\t\t\tmethod: 'get',\n\t\t\turl: `http://localhost:8080/v1/projects/fetchOne/${user_id}`,\n\t\t\t// url: `https://api.algoboard.com/v1/users/fetchOne/${user_id}`,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Authorization': `Bearer ${idToken}`,\n\t\t\t},\n\t\t\tjson: true,\n\t\t});\n\t\treturn res;\n\t},\n\tasync deleteUser (user_id) {\n        // return api().delete(`users/deleteOne/${user_id}`);\n        const res = await axios({\n            method: 'DELETE',\n\t\t\turl: `http://localhost:8080/v1/users/deleteOne/${user_id}`,\n\t\t\t// url: `https://api.algoboard.com/v1/users/deleteOne/${user_id}`,\n            // data: { answer: 42 }\n        })\n        return res;\n\t},\n}"]}]}