{"remainingRequest":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/babel-loader/lib/index.js!/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Documents/Projects/GADS2020/frontend/src/store/modules/comments.js","dependencies":[{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/src/store/modules/comments.js","mtime":1603972208822},{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS2020/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/mac/Documents/Projects/GADS2020/frontend/src/store/modules/comments.js"],"names":["commentsApi","state","comments","admin","avatar","comment","created_at","id","likes","replies","user","getters","commentById","find","actions","addComment","payload","commit","rootState","idToken","then","res","err","getComment","data","getComments","length","updateComment","deleteComment","mutations","ADD_COMMENT","unshift","GET_COMMENT","GET_COMMENTS","UPDATE_COMMENT","index","findIndex","splice","DELETE_COMMENT","filter"],"mappings":"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","sourcesContent":["'use strict'\n\nimport commentsApi from '@/services/commentsApi';\n\nconst state = {\n\tcomments: [\n        {\n            admin:false,\n            avatar:\"../assets/avatar.jpeg\",\n            comment:\"Hey!\",\n            created_at:1603731906678,\n            id:\"1603731906678_callis001\",\n            likes:[],\n            replies:[],\n            user:\"Callis\",\n        },\n        {\n            admin:false,\n            avatar:\"../assets/avatar.jpeg\",\n            comment:\"How are you?\\n\",\n            created_at:1603734156223,\n            id:\"1603734156223_callis001\",\n            likes:[],\n            replies:[],\n            user:\"Callis\",\n        },\n        {\n            admin:false,\n            avatar:\"../assets/avatar.jpeg\",\n            comment:\"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Distinctio adipisci minus aut quis quae dolorum laborum. Necessitatibus consequuntur laborum distinctio culpa aliquam fugiat maiores harum debitis alias aperiam, accusamus sed?\",\n            created_at:1603734959652,\n            id:\"1603734959652_callis001\",\n            likes:[],\n            replies:[],\n            user:\"Callis\",\n        },\n        {\n            admin:false,\n            avatar:\"../assets/avatar.jpeg\",\n            comment:\"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Distinctio adipisci minus aut quis quae dolorum laborum. Necessitatibus consequuntur laborum distinctio culpa aliquam fugiat maiores harum debitis alias aperiam, accusamus sed?\",\n            created_at:1603738545022,\n            id:\"1603738545022_callis001\",\n            likes:[],\n            replies:[],\n            user:\"Callis\",\n        },\n        {\n            admin:false,\n            avatar:\"../assets/avatar.jpeg\",\n            comment:\"Finally\",\n            created_at:1603772543218,\n            id:\"1603772543218_callis001\",\n            likes:[],\n            replies:[],\n            user:\"Callis\",\n        },\n        {\n            admin:false,\n            avatar:\"../assets/avatar.jpeg\",\n            comment:\"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Distinctio adipisci minus aut quis quae dolorum laborum.\",\n            created_at:1603772732825,\n            id:\"1603772732825_callis001\",\n            likes:[],\n            replies:[],\n            user:\"Callis\",\n        },\n    ],\n\tcomment: {},\n};\n\nconst getters = {\n\tcomments: state => state.comments,\n\tcomment: state => state.comment,\n\tcommentById: state => id => {\n\t\treturn state.comments.find(comment => comment.id === id)\n\t}\n};\n\nconst actions = {\n    async addComment({ commit, rootState }, payload) {\n        // api call\n        return commentsApi.addComment(rootState.idToken, {\n\t\t\tcomment: payload.comment,\n\t\t})\n\t\t.then(res => {\n\t\t\t// commit comment\n\t\t\tcommit('ADD_COMMENT', payload);\n\t\t\treturn res;\n\t\t})\n\t\t.catch( err => {\n\t\t\treturn err;\n\t\t});\n    },\n    async getComment({ state, getters, commit, rootState }, payload) {\n        // filter comment then api call\n        if (payload.id == state.comment.id) {\n\t\t\treturn state.comment\n\t\t}\n\t\n\t\tvar comment = getters.commentById(payload.id)\n\t\n\t\tif (comment) {\n\t\t\tcommit('GET_COMMENT', comment)\n\t\t\treturn comment;\n\t\t} else {\n\t\t\treturn commentsApi.getComment(payload.id, rootState.idToken)\n\t\t\t.then(res => {\n\t\t\t\tcommit('GET_COMMENT', res.data)\n\t\t\t\treturn res.data;\n\t\t\t})\n\t\t\t.catch( err => {\n\t\t\t\treturn err;\n\t\t\t});\n\t\t}\n    },\n    async getComments({ state, commit, rootState }) {\n        // api call\n        if (state.comments && state.comments.length > 0) {\n\t\t\treturn state.comments;\n\t\t}\n\n\t\treturn commentsApi.getComments(rootState.idToken)\n\t\t.then(res => {\n\t\t\tcommit('GET_COMMENTS', res.data);\n\t\t\treturn res.data;\n\t\t})\n\t\t.catch( err => {\n\t\t\t// var message = 'There was a problem fetching events: ' + err.message\n\t\t\treturn err;\n\t\t});\n    },\n    async updateComment({ commit, rootState }, payload) {\n        // api call\n        return commentsApi.updateComment(rootState.idToken, {\n\t\t\tid: payload.id,\n\t\t\tcomment: payload.comment,\n\t\t})\n\t\t.then(res => {\n\t\t\t// fix best case\n\t\t\tcommit('UPDATE_COMMENT', payload);\n\t\t\treturn res;\n\t\t})\n\t\t.catch( err => {\n\t\t\treturn err;\n\t\t});\n    },\n    async deleteComment({ commit, rootState }, payload) {\n        // api call\n        // commit('DELETE_COMMENTS', comment.id);\n        return commentsApi.deleteComment(rootState.idToken, payload.id)\n\t\t.then(res => {\n\t\t\t// fix best case\n\t\t\tcommit('DELETE_PROJECTS', payload);\n\t\t\treturn res;\n\t\t})\n\t\t.catch( err => {\n\t\t\treturn err;\n\t\t});\n    },\n};\n\nconst mutations = {\n    ADD_COMMENT(state, comment) {\n        state.comments.unshift(comment);\n    },\n    GET_COMMENT(state, comment) {\n        state.comment = comment;\n    },\n    GET_COMMENTS(state, comments) {\n        state.comments = comments;\n    },\n    UPDATE_COMMENT(state, payload) {\n        const index = state.comments.findIndex(comment => comment.id === payload.id);\n        if (index !== -1) {\n          state.comments.splice(index, 1, payload);\n        }\n    },\n    DELETE_COMMENT(state, payload) {\n        state.comments = state.comments.filter(comment => comment.id !== payload.id);\n    },\n};\n\nexport default {\n\tstate,\n\tgetters,\n\tactions,\n\tmutations\n};"]}]}