{"remainingRequest":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Documents/Projects/GADS/frontend/src/components/user/Notifications.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Documents/Projects/GADS/frontend/src/components/user/Notifications.vue","mtime":1603888778897},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Documents/Projects/GADS/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewoJbmFtZTogJ05vdGlmaWNhdGlvbicsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIAogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIG5vdGlmaWNhdGlvbnM6IHsKICAgICAgICAgICAgLy8gQXMgcGVyIGRpc2N1c3Npb24gb24gd2F0Y2hpbmcgbmVzdGVkIG9iamVjdCBoZXJlOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNDIxMzQxNzYKICAgICAgICAgICAgaGFuZGxlcigpIHsKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ25vdGlmaWNhdGlvbicsIHRoaXMubm90aWZpY2F0aW9ucy5maWx0ZXIobm90aWZpY2F0aW9uID0+IG5vdGlmaWNhdGlvbi5yZWFkID09IGZhbHNlKS5sZW5ndGgpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBkZWVwOiB0cnVlCiAgICAgICAgfSwKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcEdldHRlcnMoWydub3RpZmljYXRpb25zJywgJ3VzZXInXSksCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLiRlbWl0KCdub3RpZmljYXRpb24nLCB0aGlzLm5vdGlmaWNhdGlvbnMuZmlsdGVyKG5vdGlmaWNhdGlvbiA9PiBub3RpZmljYXRpb24ucmVhZCA9PSBmYWxzZSkubGVuZ3RoKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgcmVhZCh2YWwpIHsKICAgICAgICAgICAgdGhpcy5ub3RpZmljYXRpb25zLnJlYWQgPSAhdmFsLnJlYWQ7CiAgICAgICAgfSwKICAgIH0sCn0K"},{"version":3,"sources":["Notifications.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Notifications.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n    <div class=\"notification--container\">\n        <div v-if=\"notifications\">\n            <section class=\"notification\" v-for=\"notification in notifications\" :key=\"notification.id\">\n                <div class=\"notification--header\">\n                    <h3 class=\"\">{{ notification.name }}</h3>\n                </div>\n                <div class=\"notification--body\">\n                    <p>{{ notification.message }}</p>\n                </div>\n                <div class=\"notification--footer\">\n                    <button type=\"button\" class=\"btn\" v-if=\"!notification.read\" @click=\"read(notification); notification.read = !notification.read;\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"20\" height=\"20\" viewBox=\"0 0 100 100\">\n                            <g transform=\"translate(10,70) scale(0.05,-0.05)\">\n                                <path fill=\"#DFAB24\" glyph-name=\"ok\" unicode=\"\" d=\"M932 534q0-22-15-38l-404-404-76-76q-16-15-38-15t-38 15l-76 76-202 202q-15 16-15 38t15 38l76 76q16 16 38 16t38-16l164-165 366 367q16 16 38 16t38-16l76-76q15-16 15-38z\" horiz-adv-x=\"1000\">\n                                </path>\n                            </g>\n                        </svg>\n                        Mark as read\n                    </button>\n                    <button type=\"button\" class=\"btn\" v-else @click=\"read(notification); notification.read = !notification.read;\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"20\" height=\"20\" viewBox=\"0 0 100 100\">\n                            <g transform=\"translate(10,70) scale(0.05,-0.05)\">\n                                <path fill=\"#DFAB24\" glyph-name=\"cancel\" unicode=\"\" d=\"M724 112q0-22-15-38l-76-76q-16-15-38-15t-38 15l-164 165-164-165q-16-15-38-15t-38 15l-76 76q-16 16-16 38t16 38l164 164-164 164q-16 16-16 38t16 38l76 76q16 16 38 16t38-16l164-164 164 164q16 16 38 16t38-16l76-76q15-15 15-38t-15-38l-164-164 164-164q15-15 15-38z\" horiz-adv-x=\"785.7\">\n                                </path>\n                            </g>\n                        </svg>\n                        Mark as unread\n                    </button>\n                </div>\n            </section>\n        </div>\n        <div v-else>No notification!!!</div>\n    </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport { mapGetters } from 'vuex'\nexport default {\n\tname: 'Notification',\n    data() {\n        return {\n            \n        }\n    },\n    watch: {\n        notifications: {\n            // As per discussion on watching nested object here: https://stackoverflow.com/a/42134176\n            handler() {\n                this.$emit('notification', this.notifications.filter(notification => notification.read == false).length);\n            },\n            deep: true\n        },\n    },\n    computed: {\n        ...mapGetters(['notifications', 'user']),\n    },\n    mounted() {\n        this.$emit('notification', this.notifications.filter(notification => notification.read == false).length);\n    },\n    methods: {\n        read(val) {\n            this.notifications.read = !val.read;\n        },\n    },\n}\n</script>\n\n<style scoped>\n.notification--container {\n    display: block;\n    margin-top: 0.5rem;\n    background-color: #fff;\n    border-radius: .25rem;\n    box-shadow: 0 10px 15px -3px rgba(0,0,0,.1), 0 4px 6px -2px rgba(0,0,0,.05);\n}\n.notification {\n    border-bottom-width: 8px;\n    border-bottom: 8px solid #edf2f7;\n    border-top: 8px solid #edf2f7;\n    border-color: #edf2f7;\n    padding: .5rem 0;\n}\n.notification:hover {\n    background-color:#f7fafc;\n}\n.notification--header h3 {\n    font-weight: 700;\n    color: #000000;\n    padding: .5rem 1rem;\n    border-bottom: 1px solid;\n}\n.notification--body {\n    display: flex;\n    /* background-color:#f7fafc; */\n    align-items: center;\n    padding: .5rem 1rem;\n    text-align: left;\n}\n.notification--footer {\n    display: flex;\n    align-items: center;\n    padding: .5rem 1rem;\n}\n/* button */\n/* As per discussion on handling buttons https://codyhouse.co/blog/post/vertical-text-alignment-in-buttons-and-inputs */\n.btn, .form-control {\n    /* reset user agent stylesheet */\n    background-color: transparent;\n    border-radius: 0;\n    color: inherit;\n    appearance: none;\n}\n.btn {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.2rem;\n    outline: none;\n}\n</style>"]}]}